{
  "name": "eureca.io",
  "description": "Nodejs remote procedure call supporting multiple transports",
  "version": "0.6.41",
  "author": {
    "name": "Alaa-eddine KADDOURI"
  },
  "keywords": [
    "RPC",
    "Primus",
    "engine.io",
    "sockjs",
    "socket.io",
    "websocket",
    "xhr",
    "ajax",
    "eureca",
    "node"
  ],
  "homepage": "http://eureca.io/",
  "repository": {
    "type": "git",
    "url": "https://github.com/Ezelia/eureca.io"
  },
  "dependencies": {
    "primus": ">= 2.1.0"
  },
  "engines": {
    "node": ">=0.10.20"
  },
  "main": "index.js",
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-typescript": "^0.6.1",
    "typescript": "^1.4.1"
  },
  "readme": "eureca.io\r\n=========\r\n\r\neureca (Easy Unobstructive REmote CAll) is a node.js bidirectional RPC library using [Primus.io](https://github.com/primus/primus) as a network layer.\r\n\r\nit allow you to call server side function from a browser or nodejs client and vice-versa.\r\n\r\nplease visit the project web page for more code samples http://eureca.io/\r\n\r\nWebRTC support was added in version 0.6.4 : it's based on nodejs WebRTC stack [node-webrtc](https://github.com/js-platform/node-webrtc).\r\n\r\n\r\nDocumentation\r\n=============\r\nThe [documentation](http://eureca.io/doc/) work is in progress.\r\n\r\n\r\nSetup \r\n======\r\n[![NPM](https://nodei.co/npm/eureca.io.png)](https://npmjs.org/package/eureca.io)\r\n\r\n\r\nHello World example\r\n===================\r\n\r\n### Client calling server\r\n\r\n#### Server side code\r\n\r\n```javascript\r\nvar Eureca = require('eureca.io');\r\nvar eurecaServer = new Eureca.Server();\r\n\r\neurecaServer.exports.helloServer = function (userName) {\r\n\tconsole.log('Hello Server from ',userName);\r\n}\r\n```\r\n\r\n#### Browser client side code\r\n\r\n```javascript\r\n\r\n<script src=\"/eureca.js\"></script>\r\n\r\n<body>\r\n<script>\r\nvar client = new Eureca.Client(); \r\n\r\nclient.ready(function (serverProxy) {\r\n\r\n\tserverProxy.helloServer();  //will call helloServer in the server side\r\n\t\r\n});\r\n</script>\r\n</body>\r\n```\r\n\r\n#### Nodejs client side code\r\n\r\n\r\n```javascript\r\nvar Eureca = require('eureca.io');\r\nvar client = new Eureca.Client({ uri: 'http://localhost:8000/' });\r\n \r\nclient.ready(function (serverProxy) {\r\n\tserverProxy.helloServer();\r\n});\r\n```\r\n\r\n\r\nMore examples \r\n=============\r\n\r\nplease check node_modules/eureca.io/examples/ for some example codes\r\n\r\n\r\n### running 1-http-server example code\r\n\r\nopen a terminal window and type and cd to node_modules/eureca.io/examples/1-http-server/\r\n\r\n```\r\n     node server.js\r\n```\r\n\r\n\r\nnow you can either open a browser window on http://localhost:8000/ or open another terminal window in the same directory and call\r\nopen a terminal window and type and cd to node_modules/eureca.io/examples/1-http-server/\r\n\r\n```\r\n     node client.js\r\n```\r\n\r\nyou should see 'Hello from client' on the server side.\r\n\r\n\r\n\r\nTODO / Roadmap\r\n============== \r\n * More examples/tutorials\r\n\r\n\r\n\r\nLicence\r\n=======\r\n\r\n```\r\nThe MIT License (MIT)\r\nCopyright (c) 2014 Ezelia\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/Ezelia/eureca.io/issues"
  },
  "_id": "eureca.io@0.6.41",
  "dist": {
    "shasum": "7f6edfc0cb569ee90b79b6a3de5fc959b88b4061"
  },
  "_from": "eureca.io@",
  "_resolved": "https://registry.npmjs.org/eureca.io/-/eureca.io-0.6.41.tgz"
}
